<?php


$input_s = [
	'amount'=>'200',
	'currency'=>'INR',
	'shipping'=>'0',
	'tax'=>'0',
	'handling'=>'0',
	'shipping_discount'=>'0',
	'insurance'=>'0',
	'description'=>'DSESS',
	'shop_pay_id'=>'PAY-IDSHOP01',
	'invoice_number'=>'PAYINV010100101',
	'soft_descriptor'=>'SMALL-CRM-RECEPTION',
	'item_name'=>'SMALL-CRM-RECEPTION',
	'item_desc'=>'SMALL-CRM-RECEPTION',
	'item_price'=>'200',
	'item_quantity'=>'1',
	'item_tax'=>'0',
	'item_sku'=>'SKU765',
	'shipping_name'=>'MJ',
	'shipping_line1'=>'BANG',
	'shipping_line2'=>'LURU',
	'shipping_city'=>'BENGALURU',
	'shipping_country_code'=>'IN',
	'shipping_pin'=>'560076',
	'phone'=>'011862212345678',
	'shipping_state'=>'KA'

];

$o = new Payment_processor();
$o->init(json_encode($input_s));


// /**
//  * Author [Manoj Hansda]
//  * Created [04-03-2020]
//  */
/**
 * 
 */
class payment_processor
{
	
	function __construct()
	{
		$access_token = '';
		$service_url = 'https://api.sandbox.paypal.com/v1/payments/payment';
		$access_token_url = 'https://api.sandbox.paypal.com/v1/oauth2/token';	
		$payments_id = '';
		$payer_id = '';
		$pre_payment_url = 'https://api.sandbox.paypal.com/v1/payments/payment/';
		$total_amount = '';
	}

	public function init($inputs){
		$this->total_amount = $inputs['amount'];
		$json_string = $this->payment_json_prep($inputs);
		if($access_token_response = $this->get_client_access_token()){
			$this->access_token = $access_token_response->access_token;
			$payment_response = $this->payments_prep($json_string);

			if($this->payment_info_parser($payment_response)):
				$this->call_client_side();
				// $payment_result = payments_init($id,$this->payer_id);
				// $payment_result_id = $payment_result->id;
				// if($payment_result_id):
				// 	return true;
				// else:
				// 	return false;
				// endif;
			else:
				return false;
			endif;
		}

	}

	/**
	* @prop Get Acces Token
	**/
	protected function get_client_access_token(){
		// Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
		$ch = curl_init();

		curl_setopt($ch, CURLOPT_URL, 'https://api.sandbox.paypal.com/v1/oauth2/token');
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		curl_setopt($ch, CURLOPT_POST, 1);
		curl_setopt($ch, CURLOPT_POSTFIELDS, "grant_type=client_credentials");
		curl_setopt($ch, CURLOPT_USERPWD, 'AYXc5QVtaDs4885nZRyNglVqwWhGL85maDf-paoCILF81xUYynuc6mkicvVaWt7crP9FVxKQUavu76Zz' . ':' . 'EDIjXILnhjEZU-7m3A8RHxFBEe6d1Oh0k1wOHyE_qsCJ3bErmMaqGkv6uVtR3JGLxLocOEsxXVc7phQo');

		$headers = array();
		$headers[] = 'Accept: application/json';
		$headers[] = 'Accept-Language: en_US';
		$headers[] = 'Content-Type: application/x-www-form-urlencoded';
		curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

		$result = curl_exec($ch);
		if (curl_errno($ch)) {
		    echo 'Error:' . curl_error($ch);
		}
		curl_close($ch);
		return json_decode($result);
	}

	protected function payment_json_prep($inputs){
		
		// $pay_array = array (
		// 	  'intent' => 'sale',
		// 	  'payer' => 
		// 	  array (
		// 	    'payment_method' => 'paypal',
		// 	  ),
		// 	  'transactions' => 
		// 	  array (
		// 	    0 => 
		// 	    array (
		// 	      'amount' => 
		// 	      array (
		// 	        'total' => '30.11',
		// 	        'currency' => 'USD',
		// 	        'details' => 
		// 	        array (
		// 	          'subtotal' => '30.00',
		// 	          'tax' => '0.07',
		// 	          'shipping' => '0.03',
		// 	          'handling_fee' => '1.00',
		// 	          'shipping_discount' => '-1.00',
		// 	          'insurance' => '0.01',
		// 	        ),
		// 	      ),
		// 	      'description' => 'This is the payment transaction description.',
		// 	      'custom' => 'EBAY_EMS_90048630024435',
		// 	      'invoice_number' => '48787589673',
		// 	      'payment_options' => 
		// 	      array (
		// 	        'allowed_payment_method' => 'INSTANT_FUNDING_SOURCE',
		// 	      ),
		// 	      'soft_descriptor' => 'ECHI5786786',
		// 	      'item_list' => 
		// 	      array (
		// 	        'items' => 
		// 	        array (
		// 	          0 => 
		// 	          array (
		// 	            'name' => 'hat',
		// 	            'description' => 'Brown color hat',
		// 	            'quantity' => '5',
		// 	            'price' => '3',
		// 	            'tax' => '0.01',
		// 	            'sku' => '1',
		// 	            'currency' => 'USD',
		// 	          ),
		// 	          1 => 
		// 	          array (
		// 	            'name' => 'handbag',
		// 	            'description' => 'Black color hand bag',
		// 	            'quantity' => '1',
		// 	            'price' => '15',
		// 	            'tax' => '0.02',
		// 	            'sku' => 'product34',
		// 	            'currency' => 'USD',
		// 	          ),
		// 	        ),
		// 	        'shipping_address' => 
		// 	        array (
		// 	          'recipient_name' => 'Hello World',
		// 	          'line1' => '4thFloor',
		// 	          'line2' => 'unit#34',
		// 	          'city' => 'SAn Jose',
		// 	          'country_code' => 'US',
		// 	          'postal_code' => '95131',
		// 	          'phone' => '011862212345678',
		// 	          'state' => 'CA',
		// 	        ),
		// 	      ),
		// 	    ),
		// 	  ),
		// 	  'note_to_payer' => 'Contact us for any questions on your order.',
		// 	  'redirect_urls' => 
		// 	  array (
		// 	    'return_url' => 'https://example.com',
		// 	    'cancel_url' => 'https://example.com',
		// 	  ),
		// 	);

		$payment_json_string = '{
			  "intent": "sale",
			  "payer": {
			    "payment_method": "paypal"
			  },
			  "transactions": [{
			    "amount": {
			      "total": "30.11",
			      "currency": "USD",
			      "details": {
			        "subtotal": "30.00",
			        "tax": "0.07",
			        "shipping": "0.03",
			        "handling_fee": "1.00",
			        "shipping_discount": "-1.00",
			        "insurance": "0.01"
			      }
			    },
			    "description": "This is the payment transaction description.",
			    "custom": "EBAY_EMS_90048630024435",
			    "invoice_number": "48787589673",
			    "payment_options": {
			      "allowed_payment_method": "INSTANT_FUNDING_SOURCE"
			    },
			    "soft_descriptor": "ECHI5786786",
			    "item_list": {
			      "items": [{
			        "name": "hat",
			        "description": "Brown color hat",
			        "quantity": "5",
			        "price": "3",
			        "tax": "0.01",
			        "sku": "1",
			        "currency": "USD"
			      }, {
			        "name": "handbag",
			        "description": "Black color hand bag",
			        "quantity": "1",
			        "price": "15",
			        "tax": "0.02",
			        "sku": "product34",
			        "currency": "USD"
			      }],
			      "shipping_address": {
			        "recipient_name": "Hello World",
			        "line1": "4thFloor",
			        "line2": "unit#34",
			        "city": "SAn Jose",
			        "country_code": "US",
			        "postal_code": "95131",
			        "phone": "011862212345678",
			        "state": "CA"
			      }
			    }
			  }],
			  "note_to_payer": "Contact us for any questions on your order.",
			  "redirect_urls": {
			    "return_url": "https://example.com",
			    "cancel_url": "https://example.com"
			  }
			}';


		return $payment_json_string;
	}


	protected function payments_prep($inputs){	

		$ch = curl_init();

		curl_setopt($ch, CURLOPT_URL, 'https://api.sandbox.paypal.com/v1/payments/payment');
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		curl_setopt($ch, CURLOPT_POST, 1);
		curl_setopt($ch, CURLOPT_POSTFIELDS, $inputs);

		$headers = array();
		$headers[] = 'Content-Type: application/json';
		$headers[] = 'Authorization: Bearer '.$this->access_token.'';
		curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

		$result = curl_exec($ch);
		if (curl_errno($ch)) {
		    echo 'Error:' . curl_error($ch);
		}
		curl_close($ch);
		return $result;
	}


	protected function payment_info_parser($payment_response){
		$json_string = json_decode($payment_response);

		if($json_string->state == 'created'){
			$this->payments_id = $json_string->id;
			// $this->payer_id =  $json_string->payer_id;
			return true;
		}else{
			return false;
		}
	}


	protected function payments_init($id,$payer_id){

		$payment_url = $this->pre_payment_url.$id.'/execute';

		$postData = [
			"payer_id"=> $payer_id
		];

		$ch = curl_init();
		$headers  = [
		            'Content-Type: application/json',
		            'Authorization: Bearer '.$this->access_token.''
		        ];
		curl_setopt($ch, CURLOPT_URL, $payment_url);
		curl_setopt($ch, CURLOPT_POST, 1);
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($postData));           
		curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
		$result     = curl_exec ($ch);
		$statusCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
		// $decoded = json_decode($result);
		return $result;
	}

	protected function call_client_side(){
		$_SESSION['order_id'] = $this->payments_id;

		print "<!DOCTYPE html>\n";
		print "\n";
		print "<head>\n";
		print "  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> <!-- Ensures optimal rendering on mobile devices. -->\n";
		print "  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /> <!-- Optimal Internet Explorer compatibility -->\n";
		print "</head>\n";
		print "\n";
		print "<body>\n";
		print "  <script\n";
		print "    src=\"https://www.paypal.com/sdk/js?client-id=AYXc5QVtaDs4885nZRyNglVqwWhGL85maDf-paoCILF81xUYynuc6mkicvVaWt7crP9FVxKQUavu76Zz\"> // Required. Replace SB_CLIENT_ID with your sandbox client ID.\n";
		print "  </script>\n";
		print "  	<center>\n";
		print "  		<div id=\"paypal-button-container\"></div>\n";
		print "	</center>\n";
		print "  <script>\n";
		print "	  paypal.Buttons({\n";
		print "	    createOrder: function(data, actions) {\n";
		print "	      return actions.order.create({\n";
		print "	        purchase_units: [{\n";
		print "	          amount: {\n";
		print "	            value: '20.01'\n";
		print "	          }\n";
		print "	        }]\n";
		print "	      });\n";
		print "	    },\n";
		print "	    onApprove: function(data, actions) {\n";
		print "	      return actions.order.capture().then(function(details) {\n";
		print "	        alert('Transaction completed by ' + details.payer.name.given_name);\n";
		print "	        // Call your server to save the transaction\n";
		print "	        return fetch('https://dev.rightchoice.io/copy/plugins/payments/paypal/paypal-transaction-complete.php', {\n";
		print "	          method: 'post',\n";
		print "	          headers: {\n";
		print "	            'content-type': 'application/json'\n";
		print "	          },\n";
		print "	          body: JSON.stringify({\n";
		print "	            orderID: data.orderID,\n";
		print "	            paymentID: data.paymentID,\n";
		print "	            payerID: data.payerID\n";
		print "	          })\n";
		print "	        });\n";
		print "	      });\n";
		print "	    }\n";
		print "	  }).render('#paypal-button-container');\n";
		print "	</script>\n";
		print "</body>";
 
	}

}
?>